#!/bin/bash -e
#@author Aleksandar Gotev (alex.gotev@mobimesh.it)

. config.conf

BASE_DIR=$(pwd)

PJSIP_BASE_PATH="${BASE_DIR}/${PJSIP_DIR_NAME}"
PJSIP_TMP_PATH="/tmp/pjsip"
CONFIG_SITE_PATH="${PJSIP_BASE_PATH}/pjlib/include/pj/config_site.h"
PJSUA_BASE_DIR="${PJSIP_TMP_PATH}/pjsip-apps/src/swig"
PJSUA_GENERATED_SRC_DIR="${PJSUA_BASE_DIR}/java/android/src"
PJSUA_GENERATED_SO_PATH="${PJSUA_BASE_DIR}/java/android/libs/armeabi/libpjsua2.so"
FINAL_BUILD_DIR="${BASE_DIR}/pjsip-build"
FINAL_BUILD_LIB="${FINAL_BUILD_DIR}/lib"
FINAL_BUILD_LOGS="${FINAL_BUILD_DIR}/logs"

export ANDROID_NDK_ROOT="${BASE_DIR}/${NDK_DIR_NAME}"
export NDK_SYSROOT="${ANDROID_NDK_ROOT}/platforms/android-${TARGET_ANDROID_API}/arch-arm"
export PREBUILT=$ANDROID_NDK_ROOT/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86
export PATH="$ANDROID_NDK_ROOT:$PATH"
echo $ANDROID_NDK_ROOT

if [ "$DOWNLOAD_OPUS" == "1" ]
then
   echo "Building OPUS"
   cd "${BASE_DIR}/${OPUS_DIR_NAME}"

    export PATH=/tmp/my_toolchain/bin/:$PATH
    export CC=arm-linux-androideabi-gcc
    export CXX=arm-linux-androideabi-g++

    make && make install
fi

if [ "$DOWNLOAD_X264" == "1" ]
then
    echo "Building X264"
    cd "${BASE_DIR}/${X264_DIR_NAME}"
    make && make install
fi

if [ "$DOWNLOAD_LIBVPX" == "1" ]
then
    echo "Building VPX"
    cd "${BASE_DIR}/${LIBVPX_DIR_NAME}"
    make && make install
fi

if [ "$DOWNLOAD_FFMPEG" == "1" ]
then
   echo "Building FFMPEG"
   cd "${BASE_DIR}"
   rm -fr "${FFMPEG_DIR_NAME}"
   unzip FFmpeg-master.zip
   cd  ${BASE_DIR}/${FFMPEG_DIR_NAME}
   # comment out libopus pkg-config
   sed -i '5466s/^/#/' configure
   CFLAGS="-O3 -Wall -mthumb -pipe -fpic -fasm \
  -finline-limit=300 -ffast-math \
  -fstrict-aliasing -Werror=strict-aliasing \
  -fmodulo-sched -fmodulo-sched-allow-regmoves \
  -Wno-psabi -Wa,--noexecstack \
  -DANDROID -DNDEBUG"

   ./configure --target-os=linux \
    --prefix=${BASE_DIR}/ffmpeg-output \
    --enable-cross-compile \
    --enable-shared \
    --disable-static \
    --enable-memalign-hack \
    --extra-libs="-lgcc" \
    --arch=arm \
    --cc=$PREBUILT/bin/arm-linux-androideabi-gcc \
	--cross-prefix=$PREBUILT/bin/arm-linux-androideabi- \
	--nm=$PREBUILT/bin/arm-linux-androideabi-nm \
    --sysroot=$NDK_SYSROOT \
    --extra-cflags="$CFLAGS -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fPIE -pie $OPTIMIZE_CFLAGS -I$NDK_SYSROOT/usr/include -I$BASE_DIR/x264-output/include -I$BASE_DIR/vpx-output/include -I$BASE_DIR/opus-output/include/opus " \
    --extra-ldflags=" -lc -lm -ldl -llog  -Wl,--fix-cortex-a8 -lx264 -lopus -L$BASE_DIR/x264-output/lib -L$BASE_DIR/opus-output/lib  -L$BASE_DIR/vpx-output/lib " \
    --enable-gpl \
    --enable-libx264 \
    --enable-libopus \
    --enable-libvpx \
    --disable-network \
    --disable-doc \
    --disable-ffplay \
    --disable-ffprobe
   make clean
   make -j4
   make install
fi

echo "Clear final build folder ..."
rm -rf "${FINAL_BUILD_DIR}"
mkdir -p "${FINAL_BUILD_LIB}"
mkdir -p "${FINAL_BUILD_LOGS}"

echo "Creating config site file for Android ..."
cat <<EOF > "$CONFIG_SITE_PATH"
#define PJ_CONFIG_ANDROID 1
#include <pj/config_site_sample.h>
#define PJMEDIA_HAS_VIDEO 1
EOF

for arch in "${TARGET_ARCHS[@]}"
do
    echo "Compile PJSIP for arch $arch ..."
    rm -rf "${PJSIP_TMP_PATH}"
    mkdir -p "${PJSIP_TMP_PATH}"
    cd "${PJSIP_BASE_PATH}"
    cp -r * "${PJSIP_TMP_PATH}"
    cd "${PJSIP_TMP_PATH}"

    APP_PLATFORM=android-${TARGET_ANDROID_API} TARGET_ABI=$arch ./configure-android --use-ndk-cflags \
                                         --with-ffmpeg="${BASE_DIR}/ffmpeg-output" \
                                         --disable-openh264 \
                                         --disable-g711-codec \
                                         --disable-ilbc-codec \
                                         --disable-v4l2 \
                                         --disable-sdl \
                                         --disable-gsm-codec \
                                         --disable-g722-codec \
                                         --disable-g7221-codec \
                                         --disable-l16-codec
                                         >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1
    make dep >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1
    make >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1

    echo "Compile PJSUA for arch $arch ..."
    cd "${PJSUA_BASE_DIR}"
    make >>"${FINAL_BUILD_LOGS}/${arch}.log" 2>&1

    echo "Copying PJSUA .so library to final build directory ..."
    mkdir -p "${FINAL_BUILD_LIB}/${arch}"
    mv "${PJSUA_GENERATED_SO_PATH}" "${FINAL_BUILD_LIB}/${arch}/"
    

done
   
echo "Copying ffmpeg .so library to final build directory ..."
cp ${BASE_DIR}/ffmpeg-output/lib/* ${FINAL_BUILD_LIB}/${arch}/
echo "Copying PJSUA2 java bindings to final build directory ..."
cp -r "${PJSUA_GENERATED_SRC_DIR}" "${FINAL_BUILD_DIR}"
rm -rf "${PJSIP_TMP_PATH}"
echo "Finished! Check the generated output in ${FINAL_BUILD_DIR}"
    
